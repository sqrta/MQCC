qreg in_qubits[5];
qreg anc1[2];
qreg anc2[2];
qreg anc3[2];
qreg anc4[2];
qreg anc5[2];
qreg anc6[2];
qreg out[8];

fcho c1 = {0, 1};
fcho c2 = {0, 1};
fcho c3 = {0, 1};
fcho c4 = {0, 1};


lcho cl = 1 - c1 * c2 * c3 * c4;

module TOFFOLI(a,b,c){
    h(c);
    CNOT(b,c);
    tdg(c);
    CNOT(a,c);
    t(c);
    CNOT(b,c);
    tdg(c);
    CNOT(b,c);
    t(b);
    t(c);
    CNOT(a,b);
    h(c);
    t(a);
    tdg(b);
    CNOT(a,b);
}

module coadder(x,y,z){
            TOFFOLI(x, y, z);
            CNOT(z, x);
            TOFFOLI(z, x, y);
    
}

module add4(in_qubits, anc){
    coadder(in_qubits[0],in_qubits[1],anc[0])
    coadder(in_qubits[2],in_qubits[3],anc[1])
    coadder(in_qubits[4],in_qubits[5],anc[2])
    coadder(in_qubits[6],in_qubits[7],anc[3])
}

module two_reserve(in_qubits, anc, out, label){
    add4(in_qubits, anc);
    choice (label){
        1:  cnot(anc[0],out);
            cnot(anc[1],out);
            add4(in_qubits,anc);
            release(anc[0],anc[1],anc[2], anc[3]);
        0:  pass
    }
}

module main(in_qubits){
    two_reserve(in_qubits, anc1, out[1], c1);
    two_reserve(in_qubits, anc2, out[2], c2);
    two_reserve(in_qubits, anc3, out[3], c3);
    two_reserve(in_qubits, anc4, out[4], c4);

}

main(in_qubits)
choice (cl){
    1:  cnot(anc[0],out[0]);
        main(in_qubits);
    0: pass
}



